package com.taotao.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.taotao.common.pojo.EasyUIDataGridResult;
import com.taotao.common.pojo.TaotaoResult;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemDesc;
import com.taotao.pojo.TbItemParamItem;
import com.taotao.service.ItemParamService;
import com.taotao.service.ItemService;

//商品查询Controller

@Controller
public class ItemController {

	@Autowired
	private ItemService itemService;
	@Autowired
	private ItemParamService itemParamService;

	@RequestMapping("/item/{itemId}")
	@ResponseBody
	public TbItem getItemById(@PathVariable Long itemId) {
		TbItem item = itemService.getItemById(itemId);
		return item;
	}

	@RequestMapping("/item/list")
	@ResponseBody
	public EasyUIDataGridResult getItemList(Integer page, Integer rows) {
		EasyUIDataGridResult result = itemService.getItemList(page, rows);
		return result;
	}

	@RequestMapping(value = "/item/save", method = RequestMethod.POST)
	@ResponseBody
	public TaotaoResult createItem(TbItem item, String desc, String itemParams) {
		TaotaoResult result = itemService.createItem(item, desc, itemParams);
		return result;
	}

	@RequestMapping("/rest/item/query/item/desc/{itemId}")
	@ResponseBody
	public TaotaoResult getItemDescByItemId(@PathVariable Long itemId) {
		TaotaoResult result = itemService.getItemDescByItemId(itemId);
		return result;
	}

	@RequestMapping("/rest/item/param/item/query/{itemId}")
	@ResponseBody
	public TaotaoResult getItemParamItemByItemId(@PathVariable Long itemId) {
		TaotaoResult result = itemParamService.getItemParamItemByItemId(itemId);
		return result;
	}

	@RequestMapping("/rest/item/update")
	@ResponseBody
	public TaotaoResult updateItemDescParamItem(TbItem item, String desc, Long itemParamId, String itemParams) {

		itemService.updateItemById(item);

		TbItemDesc itemDesc = new TbItemDesc();
		itemDesc.setItemId(item.getId());
		itemDesc.setItemDesc(desc);
		itemService.updateItemDescById(itemDesc);

		TbItemParamItem itemParamItem = new TbItemParamItem();
		itemParamItem.setId(itemParamId);
		itemParamItem.setItemId(item.getId());
		itemParamItem.setParamData(itemParams);
		itemParamService.updateItemParamItemById(itemParamItem);

		return TaotaoResult.ok();
	}

	// 商品下架
	@RequestMapping("/rest/item/instock")
	@ResponseBody
	public TaotaoResult instockItem(String ids) {

		String[] strings = ids.split(",");
		for (String id : strings) {
			itemService.instockItem(Long.parseLong(id));
		}
		return TaotaoResult.ok();
	}

	// 商品重新上架
	@RequestMapping("/rest/item/reshelf")
	@ResponseBody
	public TaotaoResult reshelfItem(String ids) {
		String[] strings = ids.split(",");
		for (String id : strings) {
			itemService.reshelfItem(Long.parseLong(id));
		}
		return TaotaoResult.ok();
	}

	// 删除商品
	@RequestMapping("/rest/item/delete")
	@ResponseBody
	public TaotaoResult deleteItem(String ids) {
		String[] strings = ids.split(",");
		for (String id : strings) {
			itemService.deleteItem(Long.parseLong(id));
		}
		return TaotaoResult.ok();
	}

}
